{"version":3,"sources":["Average.js","animate.js","events.js","livereload.js","pull.js","scripts.js","storage.js","components/navbar.js","components/tasks.js"],"names":["Average","arr","this","isArray","num","i","Array","push","average","shift","list","a","b","remove","length","splice","total","$","fn","extend","animateCSS","animationName","_this","one","animationEnd","removeClass","storage","uuid","submit","e","preventDefault","val","category","name","toJSON","date","difficulty","tasks","JSON","parse","due","v1","task","stringify","focus","prevNavbarHeight","adjustTopPadding","height","css","setTimeout","click","window","resize","angle","currentTarget","parents","eq","find","collapse","attr","deg","animate","step","transform","livereloadScript","document","createElement","setAttribute","location","hostname","pull","indexOf","Storage","constructor","get","data","localStorage","undefined","set","Error","_typeof","React","ReactDOM","Pikaday","moment","Sugar","render","TaskList","createClass","map","Task","key","props","displayName","getInitialState","checked","tags","difficultyChange","target","value","setState","element","nativeEvent","srcElement","checkboxChange","matches","match","addTags","regex","exec","keyCode","replace","Object","keys","removeTags","parentElement","text","textContent","slice","state","next","shiftKey","first","last","prev","className","concat","TaskCheckbox","id","change","TaskInput","TaskTagList","TaskDate","onChange","type","defaultChecked","htmlFor","defaultValue","onKeyUp","_this2","data-toggle","tag","onClick","onKeyDown","t","Date","isValid","raw","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","readOnly","test","navigator","userAgent","ref","r","input","componentDidMount","_this3","pikaday","field","onClose","getDate","charAt","toUpperCase","onSelect","create","select"],"mappings":"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","file":"scripts.min.js","sourcesContent":["// https://gist.github.com/jdtzmn/9c4fe1a13d44de0397f7\n\nvar Average = function () {\n  let arr = []\n  this.add = function (num) {\n    if (Array.isArray(num)) {\n      for (var i in num) {\n        arr.push(num[i])\n      }\n      return this.average()\n    } else {\n      arr.push(num)\n      return this.average()\n    }\n  }\n\n  this.shift = function () {\n    arr.shift()\n    return this.average()\n  }\n\n  this.list = arr\n\n  this.remove = function (a, b) {\n    if (a === 0 && b) {\n      arr.splice(arr.length + b, 1)\n    } else {\n      arr.splice(a, 1)\n    }\n    return arr\n  }\n\n  this.average = function (num) {\n    var total = 0\n    for (let i = (num && arr.length - num >= 0 ? arr.length - num : 0); i < arr.length; i++) {\n      total += arr[i] || 0\n    }\n    return total / (num && num <= arr.length ? num : arr.length)\n  }\n}\nAverage\n","var $\n\n$.fn.extend({\n  animateCSS: function (animationName) {\n    var animationEnd = 'webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend'\n    this.addClass('animated ' + animationName).one(animationEnd, () => {\n      $(this).removeClass('animated ' + animationName)\n    })\n  }\n})\n","var $, storage, uuid\n\n$(() => {\n  // new task submit event\n  $('.new-task-form').submit((e) => {\n    e.preventDefault()\n\n    let name = $('.new-task-name').val()\n    let category = $('.category').val()\n    let difficulty = $('.difficulty').val()\n    let date = new Date($('.date').val()).toJSON()\n\n    if (name && category && difficulty && date) {\n      let tasks = storage.tasks ? JSON.parse(storage.tasks) : []\n\n      let task = {\n        name: name,\n        category: category,\n        difficulty: difficulty,\n        due: date,\n        done: false,\n        id: uuid.v1()\n      }\n\n      tasks.push(task)\n\n      storage.setItem('tasks', JSON.stringify(tasks))\n\n      $('.new-task-name').val('')\n      $('.category').val('')\n      $('.difficulty').val('')\n      $('.date').val('')\n    } else {\n      if (!name) {\n        $('.new-task-name').focus().animateCSS('shake')\n      } else if (!category) {\n        $('.category').focus().animateCSS('shake')\n      } else if (!difficulty) {\n        $('.difficulty').focus().animateCSS('shake')\n      } else if (!date) {\n        $('.date').focus().animateCSS('shake')\n      }\n    }\n  })\n\n  // navbar-collapse padding event\n  let prevNavbarHeight = 0\n  let adjustTopPadding = () => {\n    if (prevNavbarHeight - $('.navbar-fixed-top').height() !== 0) {\n      $('body').css('padding-top', $('.navbar-fixed-top').height() + 40)\n      prevNavbarHeight = $('.navbar-fixed-top').height()\n      setTimeout(() => { adjustTopPadding() }, 20)\n    } else {\n      $('body').css('padding-top', $('.navbar-fixed-top').height() + 40)\n      prevNavbarHeight = 0\n    }\n  }\n\n  $('button.navbar-toggler').click(() => {\n    setTimeout(() => { adjustTopPadding() }, 80)\n  })\n\n  $(window).resize(() => {\n    adjustTopPadding()\n  })\n\n  adjustTopPadding()\n\n  // task row collapsing event\n  $('.task-row-collapse').click((e) => {\n    let angle = JSON.parse($(e.currentTarget).parents().eq(2).find('.task-collapse').collapse('toggle').attr('aria-expanded')) ? 0 : 180\n    $({deg: angle}).animate({deg: angle + 180}, {\n      duration: 400,\n      step: (val) => {\n        $(e.currentTarget).find('i').css({\n          transform: 'rotate(' + val + 'deg)'\n        })\n      }\n    })\n  })\n})\n","let livereloadScript = document.createElement('script')\nlivereloadScript.setAttribute('src', 'http://' + window.location.hostname + ':35729/livereload.js')\nlivereloadScript.setAttribute('charset', 'utf-8')\ndocument.body.appendChild(livereloadScript)\n","let pull = function (a, i) {\n  if (a.indexOf(i) > -1) a.splice(a.indexOf(i), 1)\n  return a\n}\npull\n","\n","let Storage = function () {\n  if (!(this.constructor === Storage)) {\n    return new Storage()\n  }\n\n  this.get = (e) => {\n    let data = window.localStorage\n    if (e) data = window.localStorage[e] ? window.localStorage[e] : undefined\n    return data\n  }\n\n  this.storage = this.get()\n\n  this.set = (a, b) => {\n    if (!a || !b) return new Error('key and value must not be blank')\n    let data = this.storage\n    if (typeof b === 'object') b = JSON.stringify(b)\n    if (data) {\n      window.localStorage[a] = b\n      this.storage[a] = b\n    } else {\n\n    }\n    return this.get()\n  }\n\n  this.remove = (a) => {\n    if (!a) return new Error('key must not be blank')\n    let data = this.storage\n    if (data) {\n      delete window.localStorage[a]\n      delete this.storage[a]\n    } else {\n\n    }\n    return this.storage\n  }\n}\n\nlet storage = new Storage()\nstorage\n","var React, ReactDOM, Pikaday, $, pull\n\n/*\nlet NewTaskTag = React.createClass({\n  propTypes: {\n    keypress: React.PropTypes.func.isRequired,\n    name: React.PropTypes.string.isRequired\n  },\n  render: function () {\n    return <button className='input-group-addon new-task-tag bg-warning' onKeyDown={this.props.keypress} onClick={(e) => { e.preventDefault() }}>{this.props.name} <i className='fa fa-times' onClick={this.props.keypress} /></button>\n  }\n})\n\nlet NewTaskInput = React.createClass({\n  keypress: function (e) {\n    let element = e.nativeEvent.target.children.length ? e.nativeEvent.target : e.nativeEvent.target.parentElement\n    let text = element.textContent.slice(0, -1)\n    if (!e.keyCode || e.keyCode === 8) {\n      $(element).next().length ? $(element).next().prev().focus() : $(element).prev().focus()\n      this.setState({\n        tags: pull(this.state.tags, text)\n      })\n    } else if (e.keyCode === 39) {\n      $(element).next('.new-task-tag').focus()\n    } else if (e.keyCode === 37) {\n      $(element).prev('.new-task-tag').focus()\n    } else if (e.keyCode === 9) {\n      e.shiftKey ? $('.new-task-tag').first().focus() : $('.new-task-tag').last().focus()\n    }\n  },\n  tag: function (e) {\n    let element = e.nativeEvent.srcElement\n    let value = element.value\n    let regex = /\\B#(\\S+)/g\n    let matches = {}\n    let match = regex.exec(value)\n    while (match !== null) {\n      matches[match[1]] = match[0]\n      match = regex.exec(value)\n    }\n    if (e.keyCode === 32 || e.keyCode === 13 || e.keyCode === 9) {\n      value = element.value = value.replace(/\\B#\\B/g, '')\n      this.setState({\n        tags: this.state.tags.concat(Object.keys(matches))\n      })\n      element.value = value.replace(/\\B#\\S+ ?/g, '#')\n    }\n  },\n  getInitialState: function () {\n    return {\n      tags: []\n    }\n  },\n  render: function () {\n    return (\n      <div className='new-task-group'>\n        <div className='input-group new-task-input-group'>\n          <input className='form-control new-task-name' type='text' placeholder='Task Name' autoFocus='true' onKeyUp={this.tag} />\n          {\n            this.state.tags.map((tag, i) => {\n              return <NewTaskTag name={tag} keypress={this.keypress} key={i} />\n            })\n          }\n        </div>\n      </div>\n    )\n  }\n})\n\nlet NewTaskDifficultyDropdown = React.createClass({\n  render: function () {\n    return (\n      <div className=\"difficulty-wrapper\">\n        <select className='form-control difficulty'>\n          <option defaultValue>Difficulty</option>\n          <option value='1'>Easy</option>\n          <option value='2'>Medium</option>\n          <option value='3'>Hard</option>\n        </select>\n      </div>\n    )\n  }\n})\n\nlet NewTaskPickaday = React.createClass({\n  render () {\n    let t = this\n    return (\n      <div className='date-group input-group'>\n        <input className='form-control date' type='text' placeholder='Date' ref={function (r) { t.input = r }} />\n        <div className='input-group-addon'><i className='fa fa-calendar' /></div>\n      </div>\n    )\n  },\n  componentDidMount () {\n    let pikaday = new Pikaday({\n      field: this.input,\n      theme: 'dark-theme',\n      onOpen: () => {\n        this.input.value = (new Date()).toDateString()\n      },\n      onClose: () => {\n        $('.new-task-form').submit()\n      }\n    })\n    pikaday\n  }\n})\n\nlet NewTaskButton = React.createClass({\n  render () {\n    return (\n      <button className='form-control btn btn-primary new-task-button' type='submit'>Add Task</button>\n    )\n  }\n})\n\nlet Navbar = React.createClass({\n  render () {\n    return (\n      <div className='new-task-flex'>\n        <NewTaskInput />\n        <NewTaskDifficultyDropdown />\n        <NewTaskPickaday />\n        <NewTaskButton />\n      </div>\n    )\n  }\n})\n\nReactDOM.render(<Navbar />, $('.new-task-form')[0])\n*/\n","var React, ReactDOM, Pikaday, $, moment, Sugar, pull\n\nlet TaskList = React.createClass({\n  render () {\n    let tasks = this.props.tasks.map((task, i) => {\n      return <Task task={task} key={i} />\n    })\n    return <ul className='list-group'>{tasks}</ul>\n  }\n})\n\nlet Task = React.createClass({\n  getInitialState () {\n    return {\n      difficulty: this.props.task.difficulty,\n      checked: this.props.task.checked,\n      tags: this.props.task.tags\n    }\n  },\n  difficultyChange (e) {\n    this.setState({\n      difficulty: e.target.value\n    })\n  },\n  checkboxChange (e) {\n    this.setState({\n      checked: e.target.checked\n    })\n  },\n  addTags (e) {\n    let element = e.nativeEvent.srcElement\n    let value = element.value\n    let regex = /\\B#(\\S+)/g\n    let matches = {}\n    let match = regex.exec(value)\n    while (match !== null) {\n      matches[match[1]] = match[0]\n      match = regex.exec(value)\n    }\n    if (e.keyCode === 32 || e.keyCode === 13 || e.keyCode === 9) {\n      value = element.value = value.replace(/\\B#\\B/g, '')\n      this.setState({\n        tags: this.state.tags.concat(Object.keys(matches))\n      })\n      element.value = value.replace(/\\B#\\S+ ?/g, '#')\n    }\n  },\n  removeTags (e) {\n    let element = e.nativeEvent.target.children.length ? e.nativeEvent.target : e.nativeEvent.target.parentElement\n    let text = element.textContent.slice(0, -1)\n    if (!e.keyCode || e.keyCode === 8) {\n      $(element).next().length ? $(element).next().prev().focus() : $(element).prev().focus()\n      this.setState({\n        tags: pull(this.state.tags, text)\n      })\n    } else if (e.keyCode === 39) {\n      $(element).next('.task-tag').focus()\n    } else if (e.keyCode === 37) {\n      $(element).prev('.task-tag').focus()\n    } else if (e.keyCode === 9) {\n      e.shiftKey ? $('.task-tag').first().focus() : $('.task-tag').last().focus()\n    }\n  },\n  render () {\n    let difficulty = (() => {\n      switch (+this.state.difficulty) {\n        case 1:\n          return 'dif-easy'\n        case 2:\n          return 'dif-medium'\n        case 3:\n          return 'dif-hard'\n      }\n    })()\n\n    let checked = this.state.checked ? 'task-checked' : ''\n\n    return (\n      <li className={'task list-group-item '.concat(difficulty, ' ', checked)}>\n        <div className='task-input input-group'>\n          <TaskCheckbox checked={this.props.task.checked} uuid={this.props.task.id} change={this.checkboxChange} />\n          <TaskInput value={this.props.task.name} uuid={this.props.task.id} addTags={this.addTags} />\n          <TaskTagList tags={this.state.tags} removeTags={this.removeTags} />\n          <TaskDate date={this.props.task.date} />\n          <div className='input-group-addon date-tag'>\n            <i className='fa fa-calendar' />\n          </div>\n        </div>\n      </li>\n    )\n  }\n})\n\nlet TaskCheckbox = React.createClass({\n  render () {\n    return (\n      <div className='animated-checkbox task-checkbox'>\n        <input id={this.props.uuid} onChange={this.props.change} type='checkbox' defaultChecked={this.props.checked} />\n        <label htmlFor={this.props.uuid} />\n      </div>\n    )\n  }\n})\n\nlet TaskInput = React.createClass({\n  render () {\n    return (\n      <div className='task-input-group'>\n        <input className='task-name form-control' type='text' defaultValue={this.props.value} onKeyUp={this.props.addTags} />\n      </div>\n    )\n  }\n})\n\nlet TaskTagList = React.createClass({\n  render () {\n    return this.props.tags.length ? (\n      <div className='task-tag-list-container'>\n        <div className='dropdown task-dropdown hidden-lg-up'>\n          <i className='fa fa-tags dropdown-toggle' data-toggle='dropdown' />\n          <div className='dropdown-menu'>\n            {\n              this.props.tags.map((tag, i) => {\n                return (\n                  <div className='dropdown-item task-dropdown-item' key={i}>\n                    <span className='task-dropdown-item-text'>{tag} </span>\n                    <i className='fa fa-times pull-right' onClick={this.props.removeTags} />\n                  </div>\n                )\n              })\n            }\n          </div>\n        </div>\n        <div className='hidden-md-down task-tag-list-flex'>\n          {\n            this.props.tags.map((tag, i) => {\n              return (\n                <button className='task-tag input-group-addon bg-primary' onKeyDown={this.props.removeTags} onClick={(e) => { e.preventDefault() }} key={i}>\n                  <i className='fa fa-hashtag' />{tag} <i className='fa fa-times' onClick={this.props.removeTags} />\n                </button>\n              )\n            })\n          }\n        </div>\n      </div>\n    ) : null\n  }\n})\n\nlet TaskDate = React.createClass({\n  render () {\n    let t = this\n    let date = Sugar.Date(this.props.date).isValid().raw ? moment(Sugar.Date(this.props.date)).calendar(null, {\n      sameDay: '[Today]',\n      nextDay: '[Tomorrow]',\n      nextWeek: 'dddd',\n      lastDay: '[Yesterday]',\n      lastWeek: '[Last] dddd',\n      sameElse: 'DD/MM/YYYY'\n    }) : this.props.date\n    return <input className='task-date form-control' type='text' readOnly={/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)} defaultValue={date} ref={function (r) { t.input = r }} />\n  },\n  componentDidMount () {\n    let pikaday = new Pikaday({\n      field: this.input,\n      onClose: () => {\n        if (this.input.value && Sugar.Date(this.input.value).isValid().raw) {\n          this.input.value = moment(pikaday.getDate()).calendar(null, {\n            sameDay: '[Today]',\n            nextDay: '[Tomorrow]',\n            nextWeek: 'dddd',\n            lastDay: '[Yesterday]',\n            lastWeek: '[Last] dddd',\n            sameElse: 'DD/MM/YYYY'\n          })\n        } else {\n          this.input.value = this.input.value.charAt(0).toUpperCase() + this.input.value.slice(1)\n        }\n      },\n      onSelect: () => {\n        if (pikaday.getDate() !== Sugar.Date.create(this.input.value)) {\n          this.input.value = moment(pikaday.getDate()).calendar(null, {\n            sameDay: '[Today]',\n            nextDay: '[Tomorrow]',\n            nextWeek: 'dddd',\n            lastDay: '[Yesterday]',\n            lastWeek: '[Last] dddd',\n            sameElse: 'DD/MM/YYYY'\n          })\n        }\n      }\n    })\n\n    $(this.input).on('input', () => {\n      let val = this.input.value\n      if (Sugar.Date(this.input.value).isValid().raw) {\n        pikaday.setDate(Sugar.Date.create(val))\n        this.input.value = val\n      }\n    }).click(() => {\n      this.input.select()\n    })\n    pikaday\n  }\n})\n\nReactDOM.render(<TaskList tasks={[\n  {\n    id: '640dd626-b189-11e6-80f5-76304dec7eb7',\n    name: 'P.130#1-7',\n    checked: false,\n    tags: ['Hard', 'Math', 'Reading', 'Books', 'Really Long One', 'Really Really Long One', 'Impossibly Long One'],\n    difficulty: 1,\n    date: 'Tomorrow'\n  },\n  {\n    id: 'b5271a60-b18c-11e6-80f5-76304dec7eb7',\n    name: 'Clean the car',\n    checked: true,\n    tags: ['Chores'],\n    difficulty: 2,\n    date: undefined\n  }\n]} />, $('.container')[0])\n"]}