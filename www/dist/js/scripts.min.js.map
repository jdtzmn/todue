{"version":3,"sources":["animate.js","Average.js","events.js","livereload.js","pull.js","scripts.js","storage.js","components/navbar.js","components/tasks.js"],"names":["$","fn","extend","animateCSS","animationName","_this","this","one","animationEnd","removeClass","Average","arr","isArray","num","i","Array","push","average","shift","list","a","b","remove","length","splice","total","storage","uuid","submit","e","preventDefault","val","category","name","toJSON","date","difficulty","tasks","JSON","parse","due","v1","task","stringify","focus","prevNavbarHeight","adjustTopPadding","height","css","setTimeout","click","window","resize","angle","currentTarget","parents","eq","find","collapse","attr","deg","animate","step","transform","innerWidth","parent","width","livereloadScript","document","createElement","setAttribute","location","hostname","pull","indexOf","Storage","constructor","localStorage","get","data","undefined","set","Error","React","ReactDOM","Pikaday","propTypes","NewTaskTag","createClass","isRequired","PropTypes","string","keypress","onKeyDown","props","onClick","className","NewTaskInput","displayName","element","nativeEvent","target","children","parentElement","slice","keyCode","next","shiftKey","first","last","prev","setState","tags","state","text","tag","srcElement","regex","match","exec","value","replace","concat","Object","keys","matches","getInitialState","render","type","placeholder","autoFocus","onKeyUp","key","NewTaskDifficultyDropdown","defaultValue","NewTaskPickaday","t","ref","r","input","componentDidMount","_this2","field","theme","onOpen","Date","toDateString","onClose","NewTaskButton","Navbar","TaskList","map","Task","difficultyChange","TaskCheckbox","id","TaskInput","TaskCollapse","TaskTagList","TaskDifficultySelect","change","TaskDate","htmlFor","TaskTag","onChange","defaultChecked","_this3"],"mappings":"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","file":"scripts.min.js","sourcesContent":["var $\r\n\r\n$.fn.extend({\r\n  animateCSS: function (animationName) {\r\n    var animationEnd = 'webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend'\r\n    this.addClass('animated ' + animationName).one(animationEnd, () => {\r\n      $(this).removeClass('animated ' + animationName)\r\n    })\r\n  }\r\n})\r\n","// https://gist.github.com/jdtzmn/9c4fe1a13d44de0397f7\r\n\r\nvar Average = function () {\r\n  let arr = []\r\n  this.add = function (num) {\r\n    if (Array.isArray(num)) {\r\n      for (var i in num) {\r\n        arr.push(num[i])\r\n      }\r\n      return this.average()\r\n    } else {\r\n      arr.push(num)\r\n      return this.average()\r\n    }\r\n  }\r\n\r\n  this.shift = function () {\r\n    arr.shift()\r\n    return this.average()\r\n  }\r\n\r\n  this.list = arr\r\n\r\n  this.remove = function (a, b) {\r\n    if (a === 0 && b) {\r\n      arr.splice(arr.length + b, 1)\r\n    } else {\r\n      arr.splice(a, 1)\r\n    }\r\n    return arr\r\n  }\r\n\r\n  this.average = function (num) {\r\n    var total = 0\r\n    for (let i = (num && arr.length - num >= 0 ? arr.length - num : 0); i < arr.length; i++) {\r\n      total += arr[i] || 0\r\n    }\r\n    return total / (num && num <= arr.length ? num : arr.length)\r\n  }\r\n}\r\nAverage\r\n","var $, storage, uuid\r\n\r\n$(() => {\r\n  // new task submit event\r\n  $('.new-task-form').submit((e) => {\r\n    e.preventDefault()\r\n\r\n    let name = $('.new-task-name').val()\r\n    let category = $('.category').val()\r\n    let difficulty = $('.difficulty').val()\r\n    let date = new Date($('.date').val()).toJSON()\r\n\r\n    if (name && category && difficulty && date) {\r\n      let tasks = storage.tasks ? JSON.parse(storage.tasks) : []\r\n\r\n      let task = {\r\n        name: name,\r\n        category: category,\r\n        difficulty: difficulty,\r\n        due: date,\r\n        done: false,\r\n        id: uuid.v1()\r\n      }\r\n\r\n      tasks.push(task)\r\n\r\n      storage.setItem('tasks', JSON.stringify(tasks))\r\n\r\n      $('.new-task-name').val('')\r\n      $('.category').val('')\r\n      $('.difficulty').val('')\r\n      $('.date').val('')\r\n    } else {\r\n      if (!name) {\r\n        $('.new-task-name').focus().animateCSS('shake')\r\n      } else if (!category) {\r\n        $('.category').focus().animateCSS('shake')\r\n      } else if (!difficulty) {\r\n        $('.difficulty').focus().animateCSS('shake')\r\n      } else if (!date) {\r\n        $('.date').focus().animateCSS('shake')\r\n      }\r\n    }\r\n  })\r\n\r\n  // navbar-collapse padding event\r\n  let prevNavbarHeight = 0\r\n  let adjustTopPadding = () => {\r\n    if (prevNavbarHeight - $('.navbar-fixed-top').height() !== 0) {\r\n      $('body').css('padding-top', $('.navbar-fixed-top').height() + 40)\r\n      prevNavbarHeight = $('.navbar-fixed-top').height()\r\n      setTimeout(() => { adjustTopPadding() }, 20)\r\n    } else {\r\n      $('body').css('padding-top', $('.navbar-fixed-top').height() + 40)\r\n      prevNavbarHeight = 0\r\n    }\r\n  }\r\n\r\n  $('button.navbar-toggler').click(() => {\r\n    setTimeout(() => { adjustTopPadding() }, 80)\r\n  })\r\n\r\n  $(window).resize(() => {\r\n    adjustTopPadding()\r\n  })\r\n\r\n  adjustTopPadding()\r\n\r\n  // task row collapsing event\r\n  $('.task-row-collapse').click((e) => {\r\n    let angle = JSON.parse($(e.currentTarget).parents().eq(2).find('.task-collapse').collapse('toggle').attr('aria-expanded')) ? 0 : 180\r\n    $({deg: angle}).animate({deg: angle + 180}, {\r\n      duration: 400,\r\n      step: (val) => {\r\n        $(e.currentTarget).find('i').css({\r\n          transform: 'rotate(' + val + 'deg)'\r\n        })\r\n      }\r\n    })\r\n  })\r\n\r\n  // difficulty select event\r\n  $('.abc-radio').find('input').click(function () {\r\n    if (window.innerWidth <= 991) $(this).parent().parent().find('.abc-radio').find('input:not(:checked)').parent().animate({width: 'toggle'}, 100)\r\n  })\r\n\r\n  if (window.innerWidth <= 991) $('.abc-radio').find('input:not(:checked)').parents('.difficulty-tag').find('input:checked').parents('.difficulty-tag').find('input:not(:checked)').parent().animate({width: 'toggle'}, 0)\r\n})\r\n","let livereloadScript = document.createElement('script')\r\nlivereloadScript.setAttribute('src', 'http://' + window.location.hostname + ':35729/livereload.js')\r\nlivereloadScript.setAttribute('charset', 'utf-8')\r\ndocument.body.appendChild(livereloadScript)\r\n","let pull = function (a, i) {\r\n  if (a.indexOf(i) > -1) a.splice(a.indexOf(i), 1)\r\n  return a\r\n}\r\npull\r\n","\r\n","let Storage = function () {\r\n  if (!(this.constructor === Storage)) {\r\n    return new Storage()\r\n  }\r\n\r\n  this.storage = window.localStorage\r\n\r\n  this.get = (e) => {\r\n    let data = window.localStorage\r\n    if (e) data = window.localStorage[e] ? window.localStorage[e] : undefined\r\n    return data\r\n  }\r\n\r\n  this.set = (a, b) => {\r\n    if (!a || !b) return new Error('key and value must not be blank')\r\n    let data = this.storage\r\n    if (data) {\r\n      window.localStorage[a] = b\r\n      this.storage[a] = b\r\n    } else {\r\n\r\n    }\r\n    return this.get()\r\n  }\r\n\r\n  this.remove = (a) => {\r\n    if (!a) return new Error('key must not be blank')\r\n    let data = this.storage\r\n    if (data) {\r\n      delete window.localStorage[a]\r\n      delete this.storage[a]\r\n    } else {\r\n\r\n    }\r\n    return this.storage\r\n  }\r\n}\r\n\r\nlet storage = new Storage()\r\nstorage\r\n","var React, ReactDOM, Pikaday, $, pull\r\n\r\nlet NewTaskTag = React.createClass({\r\n  propTypes: {\r\n    keypress: React.PropTypes.func.isRequired,\r\n    name: React.PropTypes.string.isRequired\r\n  },\r\n  render: function () {\r\n    return <button className='input-group-addon new-task-tag bg-warning' onKeyDown={this.props.keypress} onClick={(e) => { e.preventDefault() }}>{this.props.name} <i className='fa fa-times' onClick={this.props.keypress} /></button>\r\n  }\r\n})\r\n\r\nlet NewTaskInput = React.createClass({\r\n  keypress: function (e) {\r\n    let element = e.nativeEvent.target.children.length ? e.nativeEvent.target : e.nativeEvent.target.parentElement\r\n    let text = element.textContent.slice(0, -1)\r\n    if (!e.keyCode || e.keyCode === 8) {\r\n      $(element).next().length ? $(element).next().prev().focus() : $(element).prev().focus()\r\n      this.setState({\r\n        tags: pull(this.state.tags, text)\r\n      })\r\n    } else if (e.keyCode === 39) {\r\n      $(element).next('.new-task-tag').focus()\r\n    } else if (e.keyCode === 37) {\r\n      $(element).prev('.new-task-tag').focus()\r\n    } else if (e.keyCode === 9) {\r\n      e.shiftKey ? $('.new-task-tag').first().focus() : $('.new-task-tag').last().focus()\r\n    }\r\n  },\r\n  tag: function (e) {\r\n    let element = e.nativeEvent.srcElement\r\n    let value = element.value\r\n    let regex = /\\B#(\\S+)/g\r\n    let matches = {}\r\n    let match = regex.exec(value)\r\n    while (match !== null) {\r\n      matches[match[1]] = match[0]\r\n      match = regex.exec(value)\r\n    }\r\n    if (e.keyCode === 32 || e.keyCode === 13 || e.keyCode === 9) {\r\n      value = element.value = value.replace(/\\B#\\B/g, '')\r\n      this.setState({\r\n        tags: this.state.tags.concat(Object.keys(matches))\r\n      })\r\n      element.value = value.replace(/\\B#\\S+ ?/g, '#')\r\n    }\r\n  },\r\n  getInitialState: function () {\r\n    return {\r\n      tags: []\r\n    }\r\n  },\r\n  render: function () {\r\n    return (\r\n      <div className='new-task-group'>\r\n        <div className='input-group new-task-input-group'>\r\n          <input className='form-control new-task-name' type='text' placeholder='Task Name' autoFocus='true' onKeyUp={this.tag} />\r\n          {\r\n            this.state.tags.map((tag, i) => {\r\n              return <NewTaskTag name={tag} keypress={this.keypress} key={i} />\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n})\r\n\r\nlet NewTaskDifficultyDropdown = React.createClass({\r\n  render: function () {\r\n    return (\r\n      <select className='form-control difficulty'>\r\n        <option defaultValue>Difficulty</option>\r\n        <option value='1'>Easy</option>\r\n        <option value='2'>Medium</option>\r\n        <option value='3'>Hard</option>\r\n      </select>\r\n    )\r\n  }\r\n})\r\n\r\nlet NewTaskPickaday = React.createClass({\r\n  render () {\r\n    let t = this\r\n    return (\r\n      <div className='date-group input-group'>\r\n        <input className='form-control date' type='text' placeholder='Date' ref={function (r) { t.input = r }} />\r\n        <div className='input-group-addon'><i className='fa fa-calendar' /></div>\r\n      </div>\r\n    )\r\n  },\r\n  componentDidMount () {\r\n    let pikaday = new Pikaday({\r\n      field: this.input,\r\n      theme: 'dark-theme',\r\n      onOpen: () => {\r\n        this.input.value = (new Date()).toDateString()\r\n      },\r\n      onClose: () => {\r\n        $('.new-task-form').submit()\r\n      }\r\n    })\r\n    pikaday\r\n  }\r\n})\r\n\r\nlet NewTaskButton = React.createClass({\r\n  render () {\r\n    return (\r\n      <button className='form-control btn btn-primary new-task-button' type='submit'>Add Task</button>\r\n    )\r\n  }\r\n})\r\n\r\nlet Navbar = React.createClass({\r\n  render () {\r\n    return (\r\n      <div className='new-task-flex'>\r\n        <NewTaskInput />\r\n        <NewTaskDifficultyDropdown />\r\n        <NewTaskPickaday />\r\n        <NewTaskButton />\r\n      </div>\r\n    )\r\n  }\r\n})\r\n\r\nReactDOM.render(<Navbar />, $('.new-task-form')[0])\r\n","var React, ReactDOM, Pikaday, $\r\n\r\nlet TaskList = React.createClass({\r\n  render () {\r\n    let tasks = this.props.tasks.map((task, i) => {\r\n      return <Task task={task} key={i} />\r\n    })\r\n    return <ul className='list-group'>{tasks}</ul>\r\n  }\r\n})\r\n\r\nlet Task = React.createClass({\r\n  getInitialState () {\r\n    return {\r\n      difficulty: this.props.task.difficulty\r\n    }\r\n  },\r\n  difficultyChange (e) {\r\n    this.setState({\r\n      difficulty: e.target.value\r\n    })\r\n  },\r\n  render () {\r\n    let difficulty = (() => {\r\n      switch (+this.state.difficulty) {\r\n        case 1:\r\n          return 'dif-easy'\r\n        case 2:\r\n          return 'dif-medium'\r\n        case 3:\r\n          return 'dif-hard'\r\n      }\r\n    })()\r\n    return (\r\n      <li className={'task list-group-item '.concat(difficulty)}>\r\n        <div className='task-input input-group'>\r\n          <div className='task-row'>\r\n            <TaskCheckbox uuid={this.props.task.id} />\r\n            <TaskInput value={this.props.task.name} />\r\n            <TaskCollapse />\r\n          </div>\r\n          <div className='task-collapse collapse'>\r\n            <TaskTagList tags={this.props.task.tags} />\r\n            <div className='task-row'>\r\n              <TaskDifficultySelect change={this.difficultyChange} uuid={this.props.task.id} difficulty={this.state.difficulty} />\r\n              <TaskDate date={this.props.task.date} />\r\n              <div className='input-group-addon date-tag'>\r\n                <i className='fa fa-calendar' />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    )\r\n  }\r\n})\r\n\r\nlet TaskCheckbox = React.createClass({\r\n  render () {\r\n    return (\r\n      <div className='animated-checkbox task-checkbox'>\r\n        <input id={this.props.uuid} type='checkbox' />\r\n        <label htmlFor={this.props.uuid} />\r\n      </div>\r\n    )\r\n  }\r\n})\r\n\r\nlet TaskInput = React.createClass({\r\n  render () {\r\n    return <input className='task-name form-control' type='text' defaultValue={this.props.value} />\r\n  }\r\n})\r\n\r\nlet TaskCollapse = React.createClass({\r\n  render () {\r\n    return (\r\n      <button className='input-group-addon task-row-collapse'>\r\n        <i className='fa fa-chevron-down' />\r\n      </button>\r\n    )\r\n  }\r\n})\r\n\r\nlet TaskTagList = React.createClass({\r\n  render () {\r\n    let tags = this.props.tags.map((tag, i) => {\r\n      return <TaskTag name={tag} keypress={this.keypress} key={i} />\r\n    })\r\n    if (tags.length) return <div className='task-row'>{tags}</div>\r\n    return null\r\n  }\r\n})\r\n\r\nlet TaskTag = React.createClass({\r\n  render () {\r\n    return (\r\n      <button className='input-group-addon bg-primary task-tag' onKeyDown={this.props.keypress} onClick={(e) => { e.preventDefault() }}>\r\n        {this.props.name} <i className='fa fa-times' />\r\n      </button>\r\n    )\r\n  }\r\n})\r\n\r\nlet TaskDifficultySelect = React.createClass({\r\n  render () {\r\n    return (\r\n      <div className='input-group-addon bg-primary difficulty-tag'>\r\n        <div className='abc-radio abc-radio-success'>\r\n          <input type='radio' onChange={this.props.change} name={this.props.uuid} defaultValue='1' defaultChecked={this.props.difficulty === 1} />\r\n          <label />\r\n        </div>\r\n        <div className='abc-radio abc-radio-warning'>\r\n          <input type='radio' onChange={this.props.change} name={this.props.uuid} defaultValue='2' defaultChecked={this.props.difficulty === 2} />\r\n          <label />\r\n        </div>\r\n        <div className='abc-radio abc-radio-danger'>\r\n          <input type='radio' onChange={this.props.change} name={this.props.uuid} defaultValue='3' defaultChecked={this.props.difficulty === 3} />\r\n          <label />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n})\r\n\r\nlet TaskDate = React.createClass({\r\n  render () {\r\n    let t = this\r\n    return <input className='task-date form-control' type='text' defaultValue={this.props.date} ref={function (r) { t.input = r }} />\r\n  },\r\n  componentDidMount () {\r\n    let pikaday = new Pikaday({\r\n      field: this.input,\r\n      theme: 'dark-theme',\r\n      onOpen: () => {\r\n        this.input.value = (new Date()).toDateString()\r\n      }\r\n    })\r\n    pikaday\r\n  }\r\n})\r\n\r\nReactDOM.render(<TaskList tasks={[\r\n  {\r\n    id: '640dd626-b189-11e6-80f5-76304dec7eb7',\r\n    name: 'P.130#1-7',\r\n    tags: ['Hard', 'Math', 'Reading'],\r\n    difficulty: 1,\r\n    date: '1 Week'\r\n  },\r\n  {\r\n    id: 'b5271a60-b18c-11e6-80f5-76304dec7eb7',\r\n    name: '',\r\n    tags: [],\r\n    difficulty: undefined,\r\n    date: undefined\r\n  }\r\n]} />, $('.container')[0])\r\n"]}