{"version":3,"sources":["animate.js","events.js","scripts.js","storage.js","components/navbar.js","components/tasks.js","src/Average.js","src/livereload.js","src/move.js","src/pull.js"],"names":["$","fn","extend","animateCSS","animationName","_this","this","one","animationEnd","removeClass","storage","uuid","submit","e","preventDefault","val","category","name","toJSON","date","difficulty","tasks","JSON","parse","due","v1","push","task","stringify","focus","prevNavbarHeight","adjustTopPadding","height","css","setTimeout","click","window","resize","angle","currentTarget","parents","eq","find","collapse","attr","deg","animate","step","transform","Storage","constructor","get","data","localStorage","undefined","set","a","b","Error","_typeof","remove","React","ReactDOM","Pikaday","pull","moment","Sugar","Sortable","componentDidMount","TaskList","createClass","animation","create","document","getElementById","render","props","map","i","createElement","Task","key","displayName","getInitialState","checked","tags","difficultyChange","target","value","setState","element","nativeEvent","srcElement","checkboxChange","matches","match","addTags","regex","exec","keyCode","type","replace","Object","keys","removeTags","children","length","parentElement","text","textContent","slice","state","next","shiftKey","first","last","prev","className","concat","TaskCheckbox","id","change","TaskInput","TaskTagList","TaskDate","onChange","defaultChecked","htmlFor","defaultValue","onKeyUp","onBlur","_this2","data-toggle","tag","onClick","onKeyDown","t","Date","isValid","raw","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","readOnly","test","navigator","userAgent","ref","r","input","_this3","pikaday","field","onClose","getDate","charAt","toUpperCase","onSelect","countdown","diff","Math","abs","on","setDate","select","Average","arr","isArray","num","Array","average","shift","list","splice","total","livereloadScript","setAttribute","location","hostname","prototype","move","old_index","new_index","k","indexOf"],"mappings":"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","file":"scripts.min.js","sourcesContent":["var $\n\n$.fn.extend({\n  animateCSS: function (animationName) {\n    var animationEnd = 'webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend'\n    this.addClass('animated ' + animationName).one(animationEnd, () => {\n      $(this).removeClass('animated ' + animationName)\n    })\n  }\n})\n","var $, storage, uuid\n\n$(() => {\n  // new task submit event\n  $('.new-task-form').submit((e) => {\n    e.preventDefault()\n\n    let name = $('.new-task-name').val()\n    let category = $('.category').val()\n    let difficulty = $('.difficulty').val()\n    let date = new Date($('.date').val()).toJSON()\n\n    if (name && category && difficulty && date) {\n      let tasks = storage.tasks ? JSON.parse(storage.tasks) : []\n\n      let task = {\n        name: name,\n        category: category,\n        difficulty: difficulty,\n        due: date,\n        done: false,\n        id: uuid.v1()\n      }\n\n      tasks.push(task)\n\n      storage.setItem('tasks', JSON.stringify(tasks))\n\n      $('.new-task-name').val('')\n      $('.category').val('')\n      $('.difficulty').val('')\n      $('.date').val('')\n    } else {\n      if (!name) {\n        $('.new-task-name').focus().animateCSS('shake')\n      } else if (!category) {\n        $('.category').focus().animateCSS('shake')\n      } else if (!difficulty) {\n        $('.difficulty').focus().animateCSS('shake')\n      } else if (!date) {\n        $('.date').focus().animateCSS('shake')\n      }\n    }\n  })\n\n  // navbar-collapse padding event\n  let prevNavbarHeight = 0\n  let adjustTopPadding = () => {\n    if (prevNavbarHeight - $('.navbar-fixed-top').height() !== 0) {\n      $('body').css('padding-top', $('.navbar-fixed-top').height() + 40)\n      prevNavbarHeight = $('.navbar-fixed-top').height()\n      setTimeout(() => { adjustTopPadding() }, 20)\n    } else {\n      $('body').css('padding-top', $('.navbar-fixed-top').height() + 40)\n      prevNavbarHeight = 0\n    }\n  }\n\n  $('button.navbar-toggler').click(() => {\n    setTimeout(() => { adjustTopPadding() }, 80)\n  })\n\n  $(window).resize(() => {\n    adjustTopPadding()\n  })\n\n  adjustTopPadding()\n\n  // task row collapsing event\n  $('.task-row-collapse').click((e) => {\n    let angle = JSON.parse($(e.currentTarget).parents().eq(2).find('.task-collapse').collapse('toggle').attr('aria-expanded')) ? 0 : 180\n    $({deg: angle}).animate({deg: angle + 180}, {\n      duration: 400,\n      step: (val) => {\n        $(e.currentTarget).find('i').css({\n          transform: 'rotate(' + val + 'deg)'\n        })\n      }\n    })\n  })\n})\n","\n","let Storage = function () {\n  if (!(this.constructor === Storage)) {\n    return new Storage()\n  }\n\n  this.get = (e) => {\n    let data = window.localStorage\n    if (e) data = window.localStorage[e] ? window.localStorage[e] : undefined\n    return data\n  }\n\n  this.storage = this.get()\n\n  this.set = (a, b) => {\n    if (!a || !b) return new Error('key and value must not be blank')\n    let data = this.storage\n    if (typeof b === 'object') b = JSON.stringify(b)\n    if (data) {\n      window.localStorage[a] = b\n      this.storage[a] = b\n    } else {\n\n    }\n    return this.get()\n  }\n\n  this.remove = (a) => {\n    if (!a) return new Error('key must not be blank')\n    let data = this.storage\n    if (data) {\n      delete window.localStorage[a]\n      delete this.storage[a]\n    } else {\n\n    }\n    return this.storage\n  }\n}\n\nlet storage = new Storage()\nstorage\n","var React, ReactDOM, Pikaday, $, pull\n\n/*\nlet NewTaskTag = React.createClass({\n  propTypes: {\n    keypress: React.PropTypes.func.isRequired,\n    name: React.PropTypes.string.isRequired\n  },\n  render: function () {\n    return <button className='input-group-addon new-task-tag bg-warning' onKeyDown={this.props.keypress} onClick={(e) => { e.preventDefault() }}>{this.props.name} <i className='fa fa-times' onClick={this.props.keypress} /></button>\n  }\n})\n\nlet NewTaskInput = React.createClass({\n  keypress: function (e) {\n    let element = e.nativeEvent.target.children.length ? e.nativeEvent.target : e.nativeEvent.target.parentElement\n    let text = element.textContent.slice(0, -1)\n    if (!e.keyCode || e.keyCode === 8) {\n      $(element).next().length ? $(element).next().prev().focus() : $(element).prev().focus()\n      this.setState({\n        tags: pull(this.state.tags, text)\n      })\n    } else if (e.keyCode === 39) {\n      $(element).next('.new-task-tag').focus()\n    } else if (e.keyCode === 37) {\n      $(element).prev('.new-task-tag').focus()\n    } else if (e.keyCode === 9) {\n      e.shiftKey ? $('.new-task-tag').first().focus() : $('.new-task-tag').last().focus()\n    }\n  },\n  tag: function (e) {\n    let element = e.nativeEvent.srcElement\n    let value = element.value\n    let regex = /\\B#(\\S+)/g\n    let matches = {}\n    let match = regex.exec(value)\n    while (match !== null) {\n      matches[match[1]] = match[0]\n      match = regex.exec(value)\n    }\n    if (e.keyCode === 32 || e.keyCode === 13 || e.keyCode === 9) {\n      value = element.value = value.replace(/\\B#\\B/g, '')\n      this.setState({\n        tags: this.state.tags.concat(Object.keys(matches))\n      })\n      element.value = value.replace(/\\B#\\S+ ?/g, '#')\n    }\n  },\n  getInitialState: function () {\n    return {\n      tags: []\n    }\n  },\n  render: function () {\n    return (\n      <div className='new-task-group'>\n        <div className='input-group new-task-input-group'>\n          <input className='form-control new-task-name' type='text' placeholder='Task Name' autoFocus='true' onKeyUp={this.tag} />\n          {\n            this.state.tags.map((tag, i) => {\n              return <NewTaskTag name={tag} keypress={this.keypress} key={i} />\n            })\n          }\n        </div>\n      </div>\n    )\n  }\n})\n\nlet NewTaskDifficultyDropdown = React.createClass({\n  render: function () {\n    return (\n      <div className=\"difficulty-wrapper\">\n        <select className='form-control difficulty'>\n          <option defaultValue>Difficulty</option>\n          <option value='1'>Easy</option>\n          <option value='2'>Medium</option>\n          <option value='3'>Hard</option>\n        </select>\n      </div>\n    )\n  }\n})\n\nlet NewTaskPickaday = React.createClass({\n  render () {\n    let t = this\n    return (\n      <div className='date-group input-group'>\n        <input className='form-control date' type='text' placeholder='Date' ref={function (r) { t.input = r }} />\n        <div className='input-group-addon'><i className='fa fa-calendar' /></div>\n      </div>\n    )\n  },\n  componentDidMount () {\n    let pikaday = new Pikaday({\n      field: this.input,\n      theme: 'dark-theme',\n      onOpen: () => {\n        this.input.value = (new Date()).toDateString()\n      },\n      onClose: () => {\n        $('.new-task-form').submit()\n      }\n    })\n    pikaday\n  }\n})\n\nlet NewTaskButton = React.createClass({\n  render () {\n    return (\n      <button className='form-control btn btn-primary new-task-button' type='submit'>Add Task</button>\n    )\n  }\n})\n\nlet Navbar = React.createClass({\n  render () {\n    return (\n      <div className='new-task-flex'>\n        <NewTaskInput />\n        <NewTaskDifficultyDropdown />\n        <NewTaskPickaday />\n        <NewTaskButton />\n      </div>\n    )\n  }\n})\n\nReactDOM.render(<Navbar />, $('.new-task-form')[0])\n*/\n","var React, ReactDOM, Pikaday, $, moment, Sugar, pull, Sortable\n\nlet TaskList = React.createClass({\n  componentDidMount () {\n    Sortable.create(document.getElementById('task-list'), {\n      animation: 150,\n      onEnd: (e) => {\n        data.move(e.oldIndex, e.newIndex)\n      }\n    })\n  },\n  render () {\n    let tasks = this.props.tasks.map((task, i) => {\n      return <Task task={task} key={i} />\n    })\n    return <ul id='task-list' className='list-group'>{tasks}</ul>\n  }\n})\n\nlet Task = React.createClass({\n  getInitialState () {\n    return {\n      difficulty: this.props.task.difficulty,\n      checked: this.props.task.checked,\n      tags: this.props.task.tags\n    }\n  },\n  difficultyChange (e) {\n    this.setState({\n      difficulty: e.target.value\n    })\n  },\n  checkboxChange (e) {\n    this.setState({\n      checked: e.target.checked\n    })\n  },\n  addTags (e) {\n    let element = e.nativeEvent.srcElement\n    let value = element.value\n    let regex = /\\B#(\\S+)/g\n    let matches = {}\n    let match = regex.exec(value)\n    while (match !== null) {\n      matches[match[1]] = match[0]\n      match = regex.exec(value)\n    }\n    if (e.keyCode === 32 || e.keyCode === 13 || e.keyCode === 9 || e.type === 'blur') {\n      if (value !== value.replace(/\\B#\\B/g, '')) value = element.value = value.replace(/\\B#\\B/g, '')\n      this.setState({\n        tags: this.state.tags.concat(Object.keys(matches))\n      })\n      element.value = value.replace(/\\B#\\S+ ?/g, '#')\n    }\n  },\n  removeTags (e) {\n    let element = e.nativeEvent.target.children.length ? e.nativeEvent.target : e.nativeEvent.target.parentElement\n    let text = element.textContent.slice(0, -1)\n    if (!e.keyCode || e.keyCode === 8) {\n      $(element).next().length ? $(element).next().prev().focus() : $(element).prev().focus()\n      this.setState({\n        tags: pull(this.state.tags, text)\n      })\n    } else if (e.keyCode === 39) {\n      $(element).next('.task-tag').focus()\n    } else if (e.keyCode === 37) {\n      $(element).prev('.task-tag').focus()\n    } else if (e.keyCode === 9) {\n      e.shiftKey ? $('.task-tag').first().focus() : $('.task-tag').last().focus()\n    }\n  },\n  render () {\n    let difficulty = (() => {\n      switch (+this.state.difficulty) {\n        case 1:\n          return 'dif-easy'\n        case 2:\n          return 'dif-medium'\n        case 3:\n          return 'dif-hard'\n      }\n    })()\n\n    let checked = this.state.checked ? 'task-checked' : ''\n\n    return (\n      <li className={'task list-group-item '.concat(difficulty, ' ', checked)}>\n        <div className='task-input input-group'>\n          <TaskCheckbox checked={this.props.task.checked} uuid={this.props.task.id} change={this.checkboxChange} />\n          <TaskInput value={this.props.task.name} uuid={this.props.task.id} addTags={this.addTags} />\n          <TaskTagList tags={this.state.tags} removeTags={this.removeTags} />\n          <TaskDate date={this.props.task.date} />\n          <div className='input-group-addon date-tag'>\n            <i className='fa fa-calendar' />\n          </div>\n        </div>\n      </li>\n    )\n  }\n})\n\nlet TaskCheckbox = React.createClass({\n  render () {\n    return (\n      <div className='animated-checkbox task-checkbox'>\n        <input id={this.props.uuid} onChange={this.props.change} type='checkbox' defaultChecked={this.props.checked} />\n        <label htmlFor={this.props.uuid} />\n      </div>\n    )\n  }\n})\n\nlet TaskInput = React.createClass({\n  render () {\n    return (\n      <div className='task-input-group'>\n        <input className='task-name form-control' type='text' defaultValue={this.props.value} onKeyUp={this.props.addTags} onBlur={this.props.addTags} />\n      </div>\n    )\n  }\n})\n\nlet TaskTagList = React.createClass({\n  render () {\n    return this.props.tags.length ? (\n      <div className='task-tag-list-container'>\n        <div className='dropdown task-dropdown hidden-lg-up'>\n          <i className='fa fa-tags dropdown-toggle' data-toggle='dropdown' />\n          <div className='dropdown-menu'>\n            {\n              this.props.tags.map((tag, i) => {\n                return (\n                  <div className='dropdown-item task-dropdown-item' key={i}>\n                    <span className='task-dropdown-item-text'>{tag} </span>\n                    <i className='fa fa-times pull-right' onClick={this.props.removeTags} />\n                  </div>\n                )\n              })\n            }\n          </div>\n        </div>\n        <div className='hidden-md-down task-tag-list-flex'>\n          {\n            this.props.tags.map((tag, i) => {\n              return (\n                <button className='task-tag input-group-addon bg-primary' onKeyDown={this.props.removeTags} onClick={(e) => { e.preventDefault() }} key={i}>\n                  <i className='fa fa-hashtag' />{tag} <i className='fa fa-times' onClick={this.props.removeTags} />\n                </button>\n              )\n            })\n          }\n        </div>\n      </div>\n    ) : null\n  }\n})\n\nlet TaskDate = React.createClass({\n  render () {\n    let t = this\n    let date = Sugar.Date(this.props.date).isValid().raw ? moment(Sugar.Date(this.props.date)).calendar(null, {\n      sameDay: '[Today]',\n      nextDay: '[Tomorrow]',\n      nextWeek: 'dddd',\n      lastDay: '[Yesterday]',\n      lastWeek: '[Last] dddd',\n      sameElse: 'DD/MM/YYYY'\n    }) : this.props.date\n    return <input className='task-date form-control' type='text' readOnly={/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)} defaultValue={date} ref={function (r) { t.input = r }} />\n  },\n  componentDidMount () {\n    let pikaday = new Pikaday({\n      field: this.input,\n      onClose: () => {\n        if (this.input.value && Sugar.Date(this.input.value).isValid().raw) {\n          this.input.value = moment(pikaday.getDate()).calendar(null, {\n            sameDay: '[Today]',\n            nextDay: '[Tomorrow]',\n            nextWeek: 'd [Days]',\n            lastDay: '[Yesterday]',\n            lastWeek: '[Last] dddd',\n            sameElse: 'DD/MM/YYYY'\n          })\n        } else {\n          this.input.value = this.input.value.charAt(0).toUpperCase() + this.input.value.slice(1)\n        }\n      },\n      onSelect: () => {\n        if (pikaday.getDate() !== Sugar.Date.create(this.input.value)) {\n          let countdown = (moment(pikaday.getDate()).diff(moment(), 'days') + 1)\n          this.input.value = moment(pikaday.getDate()).calendar(null, {\n            sameDay: '[Today]',\n            nextDay: '[Tomorrow]',\n            nextWeek: countdown + ' [days]',\n            lastDay: '[Yesterday]',\n            lastWeek: Math.abs(countdown - 1) + ' [days late]',\n            sameElse: 'DD/MM/YYYY'\n          })\n        }\n      }\n    })\n\n    $(this.input).on('input', () => {\n      let val = this.input.value\n      if (Sugar.Date(this.input.value).isValid().raw) {\n        pikaday.setDate(Sugar.Date.create(val))\n        this.input.value = val\n      }\n    }).click(() => {\n      this.input.select()\n    })\n    pikaday\n  }\n})\n\nlet data = [\n  {\n    id: '640dd626-b189-11e6-80f5-76304dec7eb7',\n    name: 'P.130#1-7',\n    checked: false,\n    tags: ['Hard', 'Math', 'Reading', 'Books', 'Really Long One', 'Really Really Long One', 'Impossibly Long One'],\n    difficulty: 1,\n    date: 'Tomorrow'\n  },\n  {\n    id: 'b5271a60-b18c-11e6-80f5-76304dec7eb7',\n    name: 'Clean the car',\n    checked: true,\n    tags: ['Chores'],\n    difficulty: 2,\n    date: undefined\n  }\n]\n\nReactDOM.render(<TaskList tasks={data} />, $('.container')[0])\n","// https://gist.github.com/jdtzmn/9c4fe1a13d44de0397f7\n\nvar Average = function () {\n  let arr = []\n  this.add = function (num) {\n    if (Array.isArray(num)) {\n      for (var i in num) {\n        arr.push(num[i])\n      }\n      return this.average()\n    } else {\n      arr.push(num)\n      return this.average()\n    }\n  }\n\n  this.shift = function () {\n    arr.shift()\n    return this.average()\n  }\n\n  this.list = arr\n\n  this.remove = function (a, b) {\n    if (a === 0 && b) {\n      arr.splice(arr.length + b, 1)\n    } else {\n      arr.splice(a, 1)\n    }\n    return arr\n  }\n\n  this.average = function (num) {\n    var total = 0\n    for (let i = (num && arr.length - num >= 0 ? arr.length - num : 0); i < arr.length; i++) {\n      total += arr[i] || 0\n    }\n    return total / (num && num <= arr.length ? num : arr.length)\n  }\n}\nAverage\n","let livereloadScript = document.createElement('script')\nlivereloadScript.setAttribute('src', 'http://' + window.location.hostname + ':35729/livereload.js')\nlivereloadScript.setAttribute('charset', 'utf-8')\ndocument.body.appendChild(livereloadScript)\n","Array.prototype.move = function (old_index, new_index) {\n    if (new_index >= this.length) {\n        var k = new_index - this.length;\n        while ((k--) + 1) {\n            this.push(undefined);\n        }\n    }\n    this.splice(new_index, 0, this.splice(old_index, 1)[0]);\n    return this; // for testing purposes\n};\n\n/* Got this snippet from http://stackoverflow.com/questions/5306680/move-an-array-element-from-one-array-position-to-another */\n","let pull = function (a, i) {\n  if (a.indexOf(i) > -1) a.splice(a.indexOf(i), 1)\n  return a\n}\npull\n"]}